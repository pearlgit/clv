$(function () {
	$pageMatterFlick = new Flickity('.pageMatterFlick', {
		"contain": true,
		"pageDots": false,
		"prevNextButtons": false,
		"adaptiveHeight": true,
		"cellAlign": "left"
	});

	var emobj = {
		1: {
			1: "(Ô∏∂Ô∏µÔ∏∂ )",
			2: "(Ô∏∂‚∏èÔ∏∂  )",
			3: "(Ô∏∂‚ÄøÔ∏∂  )",
		},
		2: {
			1: "(‚åíÔ∏µ‚åí )",
			2: "(‚åí‚∏è‚åí  )",
			3: "(‚åí‚Äø‚åí  )",
		},
		3: {
			1: "(ÀòÍí¢Àò )",
			2: "(Àò_Àò  )",
			3: "(Àò‚ó°Àò  )",
		},
		4: {
			1: "(·µî·µï·µî  )",
			2: "(·µî_·µî  )",
			3: "(·µî·éë·µî  )",
		},
		5: {
			1: "(Íí°Íí¢Íí°  )",
			2: "(Íí°‚∏èÍí°  )",
			3: "(Íí°‚ÄøÍí°  )",
		},
		6: {
			1: "(‚óïÔ∏µ‚óï )",
			2: "(‚óï‚∏è‚óï  )",
			3: "(‚óï‚Äø‚óï  )",
		},
		7: {
			1: "(o_O  )",
			2: "(‚äô_‚äô  )",
			3: "(‚äô‚Äø‚äô  )",
		},
		8: {
			1: "(¬¨Ô∏µ¬¨ )",
			2: "(¬¨‚∏è¬¨  )",
			3: "(¬¨‚Äø¬¨  )",
		},
		9: {
			1: "(‚òíÔ∏µ‚òí  )",
			2: "(‚òê‚∏è‚òê  )",
			3: "(‚òë‚Äø‚òë  )",
		},
		10: {
			1: "(ÔøΩÔ∏µÔøΩ )",
			2: "(‚ú¶‚∏è‚ú¶  )",
			3: "(‚ú¶‚Äø‚ú¶  )",
		},
		11: {
			1: "(  ë±¢ Ôπè ë±¢)",
			2: "(  ë±¢ Ô∏µ ë±¢)",
			3: "(  ë±¢ ‚Äø ë±¢)",
			4: "(  ë±¢ ‚∏è ë±¢)",
		},
		12: {
			1: "(íäπÔ∏µíäπ )",
			2: "(íäπ‚∏èíäπ  )",
			3: "(íäπ‚Äøíäπ  )",
		},
		13: {
			1: "(ñ£òÔ∏µñ£ò )",
			2: "(ñ£ò‚∏èñ£ò  )",
			3: "(ñ£ò‚Äøñ£ò  )",
		},
		14: {
			1: "(ñ£êÔ∏µñ£ê )",
			2: "(ñ£ê‚∏èñ£ê  )",
			3: "(ñ£ê‚Äøñ£ê  )",
		},
		15: {
			1: "(@Ô∏µ@ )",
			2: "(@‚∏è@  )",
			3: "(@‚Äø@  )",
		},
		16: {
			1: "(·™§Ô∏µ·™§ )",
			2: "(·™§‚∏è·™§  )",
			3: "(·™§‚Äø·™§  )",
		},
		17: {
			1: "(Íâ∫Ô∏µÍâ∫ )",
			2: "(Íâª‚∏èÍâª  )",
			3: "(ÍÑ±‚ÄøÍÑ±  )",
		},
		18: {
			1: "(≈êÔ∏µ≈ê )",
			2: "(≈ê‚∏è≈ê  )",
			3: "(≈ê‚Äø≈ê  )",
		},
		19: {
			1: "(‚óü_‚óû  )",
			2: "(‚óú‚∏è‚óù  )",
			3: "(‚óú‚Äø‚óù  )",
		},
		20: {
			1: "(‚©åÔ∏µ‚©å )",
			2: "(‚©å‚∏è‚©å  )",
			3: "(‚©ê‚Äø‚©ê  )",
		},
		21: {
			1: "(‚¨íÔ∏µ‚¨í )",
			2: "(‚¨í‚∏è‚¨í  )",
			3: "(‚¨í‚Äø‚¨í  )",
		},
		22: {
			1: "(‚¨ìÔ∏µ‚¨ì )",
			2: "(‚¨ì‚∏è‚¨ì  )",
			3: "(‚¨ì‚Äø‚¨ì  )",
		},
		23: {
			1: "(·∞ΩÔ∏µ·∞û )",
			2: "(o‚∏è·∞û  )",
			3: "(o‚ÄøO )",
		},
		24: {
			1: "(„á£Ô∏µ„á£ )",
			2: "(„á£‚∏è„á£  )",
			3: "(ÍÑ≤‚ÄøÍÑ≤  )",
		},
		25: {
			1: "(·óåÔ∏µ·óè  )",
			2: "(·óå‚∏è·óè  )",
			3: "(·óå‚Äø·óè  )",
		},
		26: {
			1: "(>Ô∏µ< )",
			2: "(>‚∏è<  )",
			3: "(>‚Äø<  )",
		},
		27: {
			1: "(*Ô∏µ* )",
			2: "(*‚∏è*  )",
			3: "(*‚Äø*  )",
		},
		28: {
			1: "(~Ô∏µ~ )",
			2: "(~‚∏è~  )",
			3: "(~‚Äø~ )",
		},
		29: {
			1: "(#Ô∏µ# )",
			2: "(#‚∏è#  )",
			3: "(#‚Äø#  )",
		},
		30: {
			1: "(^Ô∏µ^ )",
			2: "(^‚∏è^  )",
			3: "(^‚Äø^  )",
		},
		31: {
			1: "(√óÔ∏µ√ó )",
			2: "(√ó‚∏è√ó  )",
			3: "(√ó‚Äø√ó  )",
		},
		32: {
			1: "(¬∞Ô∏µ¬∞ )",
			2: "(¬∞‚∏è¬∞  )",
			3: "(¬∞‚Äø¬∞  )",
		},
		33: {
			1: "(`Ô∏µ` )",
			2: "(`‚∏è`  )",
			3: "(`‚Äø`  )",
		},
		34: {
			1: "(ÔπåÔ∏µÔπå  )",
			2: "(Ôπã‚∏èÔπã  )",
			3: "(Ô∏∂‚ÄøÔ∏∂  )",
		},
		35: {
			1: "(„ÉªÔ∏µ„Éª )",
			2: "(„Éª‚∏è„Éª  )",
			3: "(„Éª‚Äø„Éª  )",
		},
		36: {
			1: "(êÑÇÔ∏µêÑÇ )",
			2: "(êÑÇ‚∏èêÑÇ  )",
			3: "(êÑÇ‚ÄøêÑÇ  )",
		},
		37: {
			1: "(Í§•Ô∏µÍ§•  )",
			2: "(Í§•‚∏èÍ§•  )",
			3: "(Í§•‚ÄøÍ§•  )",
		},
		38: {
			1: "(‚¶∏Ô∏µ‚¶∏ )",
			2: "(‚¶∏‚∏è‚¶∏  )",
			3: "(‚¶∏‚Äø‚¶∏  )",
		},
		39: {
			1: "(‚¶∑Ô∏µ‚¶∑ )",
			2: "(‚¶∑‚∏è‚¶∑  )",
			3: "(‚¶∑‚Äø‚¶∑  )",
		},
		40: {
			1: "(êÖÅêÖÄÔ∏µêÖÅêÖÄ )",
			2: "(êÖÅêÖÄ‚∏èêÖÅêÖÄ  )",
			3: "(êÖÅêÖÄ‚ÄøêÖÅêÖÄ  )",
		},
		41: {
			1: "(‚¨¶Ô∏µ‚¨¶ )",
			2: "(‚¨•‚∏è‚¨•  )",
			3: "(‚¨•‚Äø‚¨•  )",
		},
		42: {
			1: "(‚èëÔ∏µ‚èë )",
			2: "(‚èë‚∏è‚èë  )",
			3: "(‚èë‚Äø‚èë  )",
		},
		43: {
			1: "(·êûÔ∏µ·êû )",
			2: "(·êû‚∏è·êû  )",
			3: "(·êû‚Äø·êû  )",
		},
		44: {
			1: "(·∞üÔ∏µ·∞ü )",
			2: "(·∞ü‚∏è·∞ü  )",
			3: "(·∞ü‚Äø·∞ü  )",
		},
		45: {
			1: "(‚¨®Ô∏µ‚¨® )",
			2: "(‚¨ß‚∏è‚¨ß  )",
			3: "(‚¨ß‚Äø‚¨ß  )",
		},
	}

	function putEmo(){
		var emobjLen = Object.keys(emobj).length;
		$("#pageSlideCountIndi").html( emobj[random1to(emobjLen)][3] );
	}
	function random1to(n){
		return(Math.floor(Math.random() * n) + 1);
	}
	putEmo();
	
	setTimeout(function () {
		$pageMatterFlick.reloadCells();
	}, 500);

	$(".pageMatter").append("<div class='pageRow pageMatEnd'>*&nbsp;*&nbsp;*&nbsp;*&nbsp;*&nbsp;*&nbsp;*<br/><< &nbsp; Swipe to change sections. &nbsp; >></div>");

//	$("#pageSlideCountIndi").html( emobj[23][3] );

	var draggie = new Draggabilly('.drag',{
		containment: '.navCont', axis: 'y', handle: '.qrHandle'
	});

	var openf = 0, scrH, bul, mbl, mul, tbl;
	function calNavLimits(){
		scrH = $(window).innerHeight();
		tbl = Math.floor(scrH * 0.15);
		mul = Math.floor(scrH * 0.27);
		mbl = Math.floor(scrH * 0.57);
		bul = Math.floor(scrH * 0.77);
	}	
	calNavLimits();

	function setNavTop(){
		$("html").addClass("noscroll");
		$("#navContainer").removeClass("noWidth");
		$("#navBody").removeClass("navMid navBot");
		$("#navBody").css("top","");
		$("#navBody").addClass("navTop");
		openf = 1;
		$("#navContainer").addClass("fullWidth");
	}
	function setNavMid(){
		$("html").addClass("noscroll");
		$("#navBody").removeClass("navTop navBot");
		$("#navBody").css("top","");
		$("#navBody").addClass("navMid");
		openf = 2;
	}
	function setNavBot(){
		$("html").removeClass("noscroll");
		$("#navContainer").addClass("noWidth");
		$("#navBody").removeClass("navMid navTop");
		$("#navBody").css("top","");
		$("#navBody").addClass("navBot");
		openf = 0;
		$("#navContainer").removeClass("fullWidth");
	}

	$(window).resize(function(){
		calNavLimits();
		$("#navBody").css("top","");
		if(openf == 0){
			setNavBot();
		}
		else if(openf == 1){
			setNavTop();
		}
		else if(openf == 2){
			setNavMid();
		}
	});

	draggie.on('dragEnd',function(event, position){
		var dragpos = draggie.position.y;
		if(openf == 0){
			if(dragpos < bul){
				setNavTop();
			}
			else if(dragpos >= bul){
				setNavBot();
			}
		}
		else if(openf == 1){
			if(dragpos < tbl){
				setNavTop();
			}
			else if(dragpos >= tbl){
				setNavMid();
			}
		}
		else if(openf == 2){
			if(dragpos < mul){
				setNavTop();
			}
			else if(dragpos >= mul && dragpos <= mbl){
				setNavMid();
			}
			else if(dragpos > mbl){
				setNavBot();
			}
		}
	});

	function topClr(){
		$(".navbarBtn").removeClass("nbGray nbAqua");
		$(".navbarBtn").addClass("nbGreen");
	}
	function midClr(){
		$(".navbarBtn").removeClass("nbGray nbGreen");
		$(".navbarBtn").addClass("nbAqua");
	}
	function botClr(){
		$(".navbarBtn").removeClass("nbGreen nbAqua");
		$(".navbarBtn").addClass("nbGray");
	}

	draggie.on('dragMove', function(event,pointer,moveVector) {
		var dragpos = draggie.position.y;
		if(openf == 0){
			if(dragpos < bul){
				topClr();
			}
			else if(dragpos >= bul){
				botClr();
			}
		}
		else if(openf == 1){
			if(dragpos < tbl){
				topClr();
			}
			else if(dragpos >= tbl){
				midClr();
			}
		}
		else if(openf == 2){
			if(dragpos < mul){
				topClr();
			}
			else if(dragpos >= mul && dragpos <= mbl){
				midClr();
			}
			else if(dragpos > mbl){
				botClr();
			}
		}
	});

	function setMatterTop(){
		$("html,body").scrollTop( $("#pageMatterCont").offset().top - $("#introFix").outerHeight() - $("#pagePillsCont").outerHeight() + 2);
	}
	$pageMatterFlick.on('change', function (index) {
		setMatterTop();
		$("#pageSlideCountIndi").html("(" + (index + 1) + "/" + $pageMatterFlick.slides.length + ")");
	});

	$pageMatterFlick.on('pointerUp', function (event, pointer) {
		setTimeout(function () {
			$pageMatterFlick.reloadCells();
		}, 500);
	});

	$(".addPageRow").click(function () {
		$("<div class=\"pageCard\">Page 01 Row3</div>").insertAfter(".pageMatter.is-selected > .pageCard:nth-last-child(2)");
	});
	$(".remPageRow").click(function () {
		$(".pageMatter.is-selected > .pageCard:nth-last-child(2)").remove();
	});

});


